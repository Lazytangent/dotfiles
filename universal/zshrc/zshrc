# Set Antigen for plugins
source $HOME/antigen.zsh
antigen init ~/.antigenrc

# FZF
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_DEFAULT_OPTS="\
  --bind='ctrl-d:reload(fd -t d),ctrl-f:reload(fd -t f)'"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

function _fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

function _fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

function _fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd) fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh) fzf "$@" --preview 'dig {}' ;;
    *) fzf "$@" ;;
  esac
}

export NNN_PLUG='f:fzplug;o:fzopen;d:diffs'

# Vi-Mode in Terminal
bindkey -v
set -o vi
export EDITOR='nvim'
export MANPAGER='nvim --clean +Man!'

# Docker Plugin Completion
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes
zstyle ':completion:*' completer _extensions _complete _approximate
zstyle ':completion:*' menu select

if command -v pyenv 1>/dev/null 2>&1
then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

if command -v exenv 1>/dev/null 2>&1
then
  eval "$(exenv init -)"
fi

eval "$(starship init zsh)"
eval "$(zoxide init zsh)"
eval "$(direnv hook zsh)"

if test -n "$KITTY_INSTALLATION_DIR"; then
  export KITTY_SHELL_INTEGRATION="enabled"
  autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
  kitty-integration
  unfunction kitty-integration
fi

# Use Zoxide if it's executable
if command -v z > /dev/null 2>&1; then
  alias cd=z
fi

if command -v exa > /dev/null 2>&1; then
  alias ls=exa
fi

# Port in Completions
fpath+=${ZDOTDIR:-~}/.zsh_completions

# Source in custom config
if [ -f ~/.zsh_config ]; then
  source ~/.zsh_config
fi

# Port in Aliases
if [ -f ~/.zsh_aliases ]; then
  source ~/.zsh_aliases
else
  echo "You're missing the aliases"
fi

# Port in Functions
if [ -f ~/.zsh_functions ]; then
  source ~/.zsh_functions
else
  echo "You're missing the functions"
fi

if [ -f ~/.zsh_bindings ]; then
  source ~/.zsh_bindings
fi

if [ -f ~/.vaultrc ]; then
  source ~/.vaultrc
fi

if [ -f ~/.custom_env ]; then
  source ~/.custom_env
fi

if [ -f ~/.custom_rc ]; then
  source ~/.custom_rc
fi

if [ -f ~/.aliases ]; then
  source ~/.aliases
fi

if [ -f ~/.functions ]; then
  source ~/.functions
fi

export ZSH_CONFIG_LOADED='true'

# LazyGit and Neovim
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
  alias nvim=nvr -cc split --remote-wait +'set bufhidden=wipe'
  export VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
  export EDITOR="nvr -cc split --remote-wait +'set bufhidden=wipe'"
else
  export VISUAL="nvim"
  export EDITOR="nvim"
fi

# bun completions
[ -s "/Users/petermai/.bun/_bun" ] && source "/Users/petermai/.bun/_bun"

# Bun
export BUN_INSTALL="/Users/petermai/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"

# Build stuff
export C_INCLUDE_PATH=$(brew --prefix)/include
export LIBRARY_PATH=$(brew --prefix)/lib
